<?xml version="1.0" encoding="GB2312"?>
<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="wfe">
	
	<typeAlias alias="actProcdef" type="com.jingtong.platform.wfe.pojo.ActProcdef" />
	<typeAlias alias="allUsers" type="com.jingtong.platform.allUser.pojo.AllUsers" />
	<typeAlias alias="proEventLookUp" type="com.jingtong.platform.wfe.pojo.ProEventLookUp" />
	<typeAlias alias="processEventTotal" type="com.jingtong.platform.webservice.pojo.ProcessEventTotal" />
	
	<typeAlias alias="proEventTotal" type="com.jingtong.platform.wfe.pojo.ProEventTotal" />
	<typeAlias alias="proEventDetail" type="com.jingtong.platform.wfe.pojo.ProEventDetail" />
	<typeAlias alias="budgetFileTmp" type="com.jingtong.platform.file.pojo.BudgetFileTmp" />
	<typeAlias alias="linkMan" type="com.jingtong.platform.wfe.pojo.LinkMan" />
	<typeAlias alias="tripWay" type="com.jingtong.platform.wfe.pojo.TripWay" />
	<typeAlias alias="cc" type="com.jingtong.platform.wfe.pojo.Cc" />

	
	<select id="getUserModel" parameterClass="actProcdef"
			resultClass="actProcdef">
		<![CDATA[
		 	select distinct a.key_ key,a.name_ name from osap.act_re_procdef a where a.suspension_state_ = 1
		]]>
	 	<dynamic>
			<isNotEmpty property="models" prepend="and">
			<![CDATA[ a.key_ in  ]]>
				<iterate property="models" open="(" close=")" conjunction=",">#models[]#
				</iterate>
			</isNotEmpty>
		</dynamic>
	</select>
	<!--获取事务指定当前处理人对应的流程Detail(第一条,有可能多条)-->
	<select id="getDeatilByCurUserAndEventID" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<![CDATA[
		select t.event_dtl_id as eventDtlId from (
			select a.event_dtl_id from workflow.workflow_tb_event_detail a
			where a.event_id = #event_id# 
		 	and a.cur_user_id = #cur_user_id#
		 	order by a.event_dtl_id ) t
		where rownum = 1
	]]>
	</select>

	<select id="getWfeActionId" parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[
		select t.action_id from workflow.workflow_tb_event_total t where t.event_id = #eventId#
		]]>
	</select>
	
	<select id="getEvent_XmlTempID" resultClass="java.lang.Long">
		select osap.wfe_event_xmlid.nextval from dual
	</select>
	
	<select id="getEmpListByOrgId" parameterClass="java.lang.Long" 
			resultClass="allUsers">
		<![CDATA[
			select distinct a.emp_id       as userId,
       						a.emp_name     as userName,
       						a.org_id       as orgId,
       						c.station_name as posName
  			from basis.basis_tb_salesemp_info a
  			left join basis.basis_tb_station_user b on a.emp_id = b.user_id
  			left join basis.basis_tb_stations c on b.station_id = c.station_id
 			where a.emp_state='Y' and a.org_id = #org_id#
		]]>
	</select>
	<select id="getEventTotalById" parameterClass="java.lang.Long" resultClass="proEventTotal">
	<![CDATA[
		select distinct t.event_id    as eventId,
         t.event_title as eventTitle,
         q.name_  as modelName,
         t.creatdate   as createDate,
         t.model_id as modelId,
         t.status,
         t.keys,
         t.ui_xml_flag as uiXmlFlag,
         t.action_id   as actionId,
         t.condition,
         t.sub_folders as subFolders
      from workflow.workflow_tb_event_total t, osap.act_re_procdef q
     where t.model_id = q.key_
       and t.event_id = #eventId#
       and q.suspension_state_= 1
	]]>
	</select>
	
	<select id="getEventTotalByIdAndCcId" parameterClass="java.util.HashMap" resultClass="proEventTotal">
	<![CDATA[
		select distinct t.event_id    as eventId,
         t.event_title as eventTitle,
         q.name_  as modelName,
         t.creatdate   as createDate,
         t.model_id as modelId,
         t.status,
         t.keys,
         t.ui_xml_flag as uiXmlFlag,
         t.action_id   as actionId,
         t.condition,
         t.sub_folders as subFolders,
         c.replay_memo as replayMemo
      from workflow.workflow_tb_event_total t, osap.act_re_procdef q, workflow.workflow_tb_cc c
     where t.model_id = q.key_
       and t.event_id = #event_id#
       and q.suspension_state_= 1
       and c.cc_id = #cc_id#
	]]>
	</select>
	
	<!-- 查询某个事务的已处理detail节点-->
	<select id="getEventDetailList" parameterClass="proEventDetail" resultClass="proEventDetail">
	<![CDATA[
		select d.event_dtl_id     as eventDtlId,
		       d.cur_user_id      as curUserId,
		       r.role_name        as roleName,
		       i.emp_name         as userName,
		       d.last_modify      as lastModify,
		       d.operation,
		       d.memo,
		       b.fileid,
		       b.filename,
		       b.filename_new     as filenameNew,
		       i.org_id           as curOrgId,
		       d.time,
		       b.sub_folders      as subFolders,
		       d.cur_model_dtl_id as curModelDtlId,
		       d.cur_sta_id       as curStaId,
		       cc.repalyCount     as repalyCount
		  from workflow.workflow_tb_event_detail d,
		       basis.basis_tb_roles r,
		       basis.basis_tb_salesemp_info i,
		       workflow.workflow_tb_file b,
		       (select count(1) as repalyCount, c.event_detail_id
		          from workflow.workflow_tb_cc           c,
		               workflow.workflow_tb_event_detail d
		         where c.event_detail_id = d.event_dtl_id
		           and d.event_id = #eventId#
		         group by c.event_detail_id) cc
		 where d.cur_sta_id = r.role_id(+)
		   and d.cur_user_id = i.emp_id
		   and d.event_dtl_id = b.event_dtl_id(+)
		   and d.event_dtl_id = cc.event_detail_id(+)
		   and d.operation in (0, 1, 2, 9)
		   and d.cur_user_id is not null
		   and d.event_id = #eventId#
		 order by d.event_dtl_id asc

	]]>
	</select>
	
	<select id="getAuthorizationCount" parameterClass="proEventLookUp" 
			resultClass="java.lang.Integer">
		<![CDATA[
			select count(a.event_lookup_id) from workflow.workflow_tb_event_auth a
 			where a.event_id = #eventId# and a.user_id = #userId# and a.state='Y'
		]]>
	</select>
	
	<insert id="createAuthorization" parameterClass="proEventLookUp" >
		<selectKey resultClass="java.lang.Long" keyProperty="eventLookUpId">
		<![CDATA[
			select workflow.workflow_seq_event_auth.nextval as eventLookUpId from dual
		]]>
		</selectKey>
	<![CDATA[
		insert into workflow.workflow_tb_event_auth
		  (event_lookup_id,
		   user_id,
		   state,
		   creator,
		   create_date,
		   modifyer,
		   modify_date,
		   event_id
		  )
		values
		  (#eventLookUpId#,
		   #userId#,
		   'Y',
		   #creator#,
		   sysdate,
		   #userId#,
		   sysdate,
		   #eventId#
		 )
	]]>
	</insert>
	
	<select id="getEventReaderListCount" parameterClass="proEventLookUp" 
			resultClass="java.lang.Integer">
		<![CDATA[
			select count(1)
			  from workflow.workflow_tb_event_auth a
  			left join basis.basis_tb_salesemp_info b on a.user_id = b.emp_id
 			left join basis.basis_tb_salesemp_info c on a.creator = c.emp_id
  			left join basis.basis_tb_org g on b.org_id = g.org_id
  			where a.event_id = #eventId# and a.state = 'Y' and a.creator=#creator#
		]]>
		<dynamic>
			<isNotEmpty property="userName" prepend="and">
			<![CDATA[ b.emp_name like #userName,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getEventReaderList" parameterClass="proEventLookUp" resultClass="proEventLookUp">
		<include refid="global.paginationStart" />
	<![CDATA[
		select 
				a.event_lookup_id as eventLookUpId,
				b.emp_name as userName,
				c.emp_name as creator, 
				a.create_date as createDate, 
				g.org_name as orgName
  			from workflow.workflow_tb_event_auth a
  			left join basis.basis_tb_salesemp_info b on a.user_id = b.emp_id
 			left join basis.basis_tb_salesemp_info c on a.creator = c.emp_id
  			left join basis.basis_tb_org g on b.org_id = g.org_id
  			where a.event_id = #eventId# and a.state = 'Y' and a.creator=#creator#
	]]>	     
		<dynamic>
			<isNotEmpty property="userName" prepend="and">
			<![CDATA[ b.emp_name like #userName,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
		</dynamic>
	<![CDATA[		     
		 order by a.event_lookup_id desc
	]]>
		<include refid="global.paginationEnd" />
	</select>
	
	<update  id="deleteAuthorization" parameterClass="java.lang.Long" >
	<![CDATA[
		  update  workflow.workflow_tb_event_auth a set a.modify_date =sysdate,
				 a.state ='N'
			where a.event_lookup_id = #lookUpId# 
	]]>
	</update>
	
	<select id="getEventIdList" parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[
			select event_id from workflow.workflow_tb_event_auth a where a.user_id=#userId# and a.state='Y'
		]]>
	</select>
	
	<select id="getAuthorizeEventById" parameterClass="java.lang.String" resultClass="processEventTotal">
		<![CDATA[
			select 	
					a.event_id as eventId,
					a.tododetailid as currentDetailid,
					a.event_title as eventTitle,
					a.initator as initator,
					b.emp_name as empName,
					a.model_id as modelId,
					c.name_ as modelName,
					a.creatdate as creatdate,
					a.status as status
			from workflow.workflow_tb_event_total a 
			left join basis.basis_tb_salesemp_info b on a.initator=b.emp_id 
			left join osap.act_re_procdef c on a.model_id=c.key_
			where a.event_id=#eventId# and c.suspension_state_= 1
		]]>
	</select>
	
	<select id="getAuthorizeEventJsonListCount" parameterClass="processEventTotal" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1)
			from workflow.workflow_tb_event_auth t, workflow.workflow_tb_event_total a,  
			basis.basis_tb_salesemp_info b, osap.act_re_procdef c 
			where t.user_id=#userId# and t.state='Y' and a.event_id = t.event_id 
			and a.initator=b.emp_id and a.model_id=c.key_ and c.suspension_state_= 1
		]]>
		<dynamic>
			<isNotEmpty property="eventId" prepend="and">
				<![CDATA[  a.event_id like '%' || #eventId# || '%' escape '\']]>
			</isNotEmpty>
			<isNotEmpty property="eventTitle" prepend="and">
				<![CDATA[  a.event_title like #eventTitle,handler=wildcard# escape '\']]>
			</isNotEmpty>
			<isNotEmpty property="empName" prepend="and">
				<![CDATA[  b.emp_name like #empName,handler=wildcard# escape '\']]>
			</isNotEmpty>
			<isNotEmpty property="modelName" prepend="and">
				<![CDATA[  c.name_ like #modelName,handler=wildcard# escape '\']]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getAuthorizeEventJsonList" parameterClass="processEventTotal" resultClass="processEventTotal">
		<include refid="global.paginationStart" />
		<![CDATA[
			select 
					a.event_id as eventId,
					a.tododetailid as currentDetailid,
					a.event_title as eventTitle,
					a.initator as initator,
					b.emp_name as empName,
					a.model_id as modelId,
					c.name_ as modelName,
					a.creatdate as creatdate,
					a.status as status
			from workflow.workflow_tb_event_auth t, workflow.workflow_tb_event_total a,  
			basis.basis_tb_salesemp_info b, osap.act_re_procdef c 
			where t.user_id=#userId# and t.state='Y' and a.event_id = t.event_id 
			and a.initator=b.emp_id and a.model_id=c.key_ and c.suspension_state_= 1
			and c.version_=(select max(t.version_) from osap.act_re_procdef t where t.key_=a.model_id and t.suspension_state_= 1)
		]]>
		<dynamic>
			<isNotEmpty property="eventId" prepend="and">
				<![CDATA[  a.event_id like '%' || #eventId# || '%' escape '\']]>
			</isNotEmpty>
			<isNotEmpty property="eventTitle" prepend="and">
				<![CDATA[  a.event_title like #eventTitle,handler=wildcard# escape '\']]>
			</isNotEmpty>
			<isNotEmpty property="empName" prepend="and">
				<![CDATA[  b.emp_name like #empName,handler=wildcard# escape '\']]>
			</isNotEmpty>
			<isNotEmpty property="modelName" prepend="and">
				<![CDATA[  c.name_ like #modelName,handler=wildcard# escape '\']]>
			</isNotEmpty>
		</dynamic>
		<include refid="global.orderBy" />
		<include refid="global.paginationEnd" />
	</select>
	
	<insert id="createBudgetFileTmp" parameterClass="budgetFileTmp">
		<selectKey resultClass="java.lang.Long" keyProperty="fileId">
		<![CDATA[
			select office.office_seq_file_tmp.nextval as fileId from dual
		]]>
		</selectKey>
	<![CDATA[
		insert into workflow.workflow_tb_file
		  (FILEID,
		   FILENAME,
		   CREATEDATE,
		   FILENAME_NEW,
		   EVENT_DTL_ID,
		   SUB_FOLDERS)
		values
		  (#fileId#,
		   #fileName#,
		   sysdate,
		   #fileNameNew#,
		   #eventDtlId#,
		   #subFolders#)
	]]>
	</insert>
	
	<!-- 常用联系人个数 -->
	<select id="getLinkManCount" parameterClass="linkMan" resultClass="java.lang.Integer">
	<![CDATA[
		select count(t.link_id)
		  from workflow.workflow_tb_wfe_tb_linkman t, basis.basis_tb_salesemp_info p
		 where t.linkman_id = p.emp_id
		   and p.emp_state = 'Y'
		   and t.emp_id = #empId#
	]]>
		<dynamic>
			<isNotEmpty property="linkManId" prepend="and">
			<![CDATA[ t.linkman_id = #linkManId#]]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<!--查询常用联系人-->
	<select id="getLinkManList" parameterClass="linkMan" resultClass="linkMan">
	<![CDATA[
		select l.linkman_id   as linkManId,
			   l.linkman_name as linkManName,
			   l.orgid        as orgId,
			   o.org_name     as orgName,
			   l.use_count    as useCount
		  from workflow.workflow_tb_wfe_tb_linkman l
		  left join basis.basis_tb_org o
			on l.orgid = o.org_id
		  left join basis.basis_tb_salesemp_info p
			on l.linkman_id = p.emp_id
		 where p.emp_state = 'Y'
		   and l.emp_id = #empId#
	]]>
		<dynamic>
			<isNotEmpty property="linkManId" prepend="and">
			<![CDATA[ l.linkman_id = #linkManId#]]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<!--创建常用联系人-->
	<insert id="createLinkMan" parameterClass="linkMan">
		<selectKey resultClass="java.lang.Long" keyProperty="linkId">
		<![CDATA[
			select workflow.workflow_seq_wfe_tb_linkman.nextval from dual
		]]>
		</selectKey>
	<![CDATA[
		insert into workflow.workflow_tb_wfe_tb_linkman
		  (LINK_ID,
		   EMP_ID,
		   LINKMAN_ID,
		   LINKMAN_NAME,
		   USE_COUNT,
		   CREATE_DATE,
		   MODIFY_DATE,
		   ORGNAME,
		   ORGID)
		values
		  (#linkId#,
		   #empId#,
		   #linkManId#,
		   #linkManName#,
		   #useCount#,
		   sysdate,
		   sysdate,
		   #orgName#,
		   #orgId#)
	]]>
	</insert>
	
	<!--更新常用联系人-->
	<update id="updateLinkMan" parameterClass="linkMan">
	<![CDATA[
		update workflow.workflow_tb_wfe_tb_linkman t
		   set t.modify_date = sysdate, t.use_count = nvl(t.use_count, 0) + #useCount#
		 where t.emp_id = #empId#
		   and t.linkman_id = #linkManId#
	]]>
	</update>
	
	
	<select id="getStationListByEventId" parameterClass="java.lang.Long" resultClass="proEventDetail">
		<![CDATA[
			select  a.cur_user_id  as curUserId,
       				a.event_dtl_id as eventDtlId,
       				a.cur_sta_id   as curStaId,
      				p.emp_name     as curUserName,
       				b.role_name    as roleName
  			from workflow.workflow_tb_event_detail a
  			left join basis.basis_tb_salesemp_info p on a.cur_user_id = p.emp_id
  			left join basis.basis_tb_roles b on a.cur_sta_id = b.role_id
 			where a.event_dtl_id in (select min(t.event_dtl_id)
                            			from workflow.workflow_tb_event_detail t
                          			  where t.event_id = #event_id#
                             				and t.operation <> 9
                           			  group by t.cur_sta_id)
 			order by a.event_dtl_id
		]]>
	</select>
	
	<update id="updateBuglogFile" parameterClass="java.util.HashMap">
		<![CDATA[
			update office.office_tb_buglog_file t set t.state=#state# ,t.modify_date=sysdate, t.last_date=sysdate where t.event_id=#eventId# 
		]]>
	</update>
	
	<select id="getTripWayCount" parameterClass="tripWay" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1)
  		from basis.basis_tb_dict t, basis.basis_tb_dict_type a
		where a.dict_type_id = t.dict_type_id
   			  and a.dict_type_value = 'tripType'
   			  and t.item_state = 'U'

	]]>
		<dynamic>
			<isNotEmpty property="text" prepend="and">
			<![CDATA[ 
				( t.item_value like #text,handler=wildcard# escape '\'
				or t.item_name like #text,handler=wildcard# escape '\')
			]]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getTripWayList" parameterClass="tripWay" resultClass="tripWay">
	<![CDATA[
		select t.item_name as name, t.item_value as value
  		from basis.basis_tb_dict t, basis.basis_tb_dict_type a
		where a.dict_type_id = t.dict_type_id
   			  and a.dict_type_value = 'tripType'
   			  and t.item_state = 'U'

	]]>
		<dynamic>
			<isNotEmpty property="text" prepend="and">
			<![CDATA[ 
				( t.item_value like #text,handler=wildcard# escape '\'
				or t.item_name like #text,handler=wildcard# escape '\')
			]]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getTripApplyListCount" parameterClass="proEventTotal" 
			resultClass="java.lang.Integer">
		<![CDATA[
			select count(*)
			  from workflow.workflow_tb_event_total l
			  left join basis.basis_tb_salesemp_info o
			    on o.emp_id = l.initator
			 where l.model_id = 'fix_travel'
		]]>
		<dynamic>
			<isNotEmpty property="eventId" prepend="and">
			<![CDATA[ l.event_id = #eventId# ]]>
			</isNotEmpty>
			<isNotEmpty property="initator" prepend="and">
			<![CDATA[ l.initator = #initator# ]]>
			</isNotEmpty>
			<isNotEmpty property="userName" prepend="and">
			<![CDATA[ o.emp_name like #userName,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
			<isNotEmpty property="eventTitle" prepend="and">
			<![CDATA[ l.event_title like #eventTitle,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="getTripApplyList" parameterClass="proEventTotal" 
			resultClass="proEventTotal">
		<![CDATA[
			select l.event_id    eventId,
			       o.emp_name    userName,
			       l.sub_folders subFolders,
			       l.status,
			       l.event_title eventTitle
		 from workflow.workflow_tb_event_total l
			  left join basis.basis_tb_salesemp_info o
			    on o.emp_id = l.initator
			 where l.model_id = 'fix_travel'
		]]>
		<dynamic>
			<isNotEmpty property="eventId" prepend="and">
			<![CDATA[ l.event_id = #eventId# ]]>
			</isNotEmpty>
			<isNotEmpty property="initator" prepend="and">
			<![CDATA[ l.initator = #initator# ]]>
			</isNotEmpty>
			<isNotEmpty property="userName" prepend="and">
			<![CDATA[ o.emp_name like #userName,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
			<isNotEmpty property="eventTitle" prepend="and">
			<![CDATA[ l.event_title like #eventTitle,handler=wildcard# escape '\' ]]>
			</isNotEmpty>
		</dynamic>
		<![CDATA[
			order by l.event_id desc
		]]>
	</select>
	
	<insert id="createCc" parameterClass="cc" >
		<selectKey resultClass="java.lang.Long" keyProperty="cc_id">
		<![CDATA[
			select workflow.workflow_seq_cc.nextval as cc_id from dual
		]]>
		</selectKey>
	<![CDATA[
		insert into workflow.workflow_tb_cc
		  (cc_id,
		   event_id,
		   event_detail_id,
		   create_date,
		   creator,
		   replay_memo,
		   cc_user_id,
		   replay_date
		  )
		values
		  (#cc_id#,
		   #event_id#,
		   #event_detail_id#,
		   sysdate,
		   #creator#,
		   #replay_memo#,
		   #cc_user_id#,
		   #replay_date#
		 )
	]]>
	</insert>
	<update id="updateCc" parameterClass="cc">
		<![CDATA[
			update workflow.workflow_tb_cc t set t.replay_date=sysdate ,t.replay_memo=#replay_memo# where t.cc_id=#cc_id# 
		]]>
	</update>
	<select id="getCcListCount" parameterClass="cc" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1)
  		from workflow.workflow_tb_cc t, workflow.workflow_tb_event_total l,basis.basis_tb_salesemp_info o
		where t.event_id = l.event_id and t.cc_user_id = #cc_user_id#
		      and to_char(o.emp_id) = t.creator
	]]>
		<dynamic>
			<isNotEmpty property="creator_name" prepend="and">
			<![CDATA[ 
				(o.emp_name like #creator_name,handler=wildcard# escape '\')
			]]>
			</isNotEmpty>
			<isNotEmpty property="event_id" prepend="and">
			<![CDATA[ 
				t.event_id = #event_id#
			]]>
			</isNotEmpty>
			<isNotEmpty property="event_title" prepend="and">
			<![CDATA[ 
				(l.event_title like #event_title,handler=wildcard# escape '\')
			]]>
			</isNotEmpty>
			<isEqual property="flag" compareValue="1" prepend="and">
				t.replay_memo is null
 			</isEqual>
			<isEqual property="flag" compareValue="2" prepend="and">
			<![CDATA[ 
				t.replay_memo is not null
			]]>
			</isEqual>
		</dynamic>
	</select>
	
	<select id="getCcList" parameterClass="cc" resultClass="cc">
		<include refid="global.paginationStart" />
		<![CDATA[
		select t.*,o.emp_name creator_name,l.event_title
  		from workflow.workflow_tb_cc t, workflow.workflow_tb_event_total l,basis.basis_tb_salesemp_info o
		where t.event_id = l.event_id and t.cc_user_id = #cc_user_id#
		      and to_char(o.emp_id) = t.creator
		]]>
		<dynamic>
			<isNotEmpty property="creator_name" prepend="and">
			<![CDATA[ 
				(o.emp_name like #creator_name,handler=wildcard# escape '\')
			]]>
			</isNotEmpty>
			<isNotEmpty property="event_id" prepend="and">
			<![CDATA[ 
				t.event_id = #event_id#
			]]>
			</isNotEmpty>
			<isNotEmpty property="event_title" prepend="and">
			<![CDATA[ 
				(l.event_title like #event_title,handler=wildcard# escape '\')
			]]>
			</isNotEmpty>
			
			<isEqual property="flag" compareValue="1" prepend="and">
				t.replay_memo is null
 			</isEqual>
			<isEqual property="flag" compareValue="2" prepend="and">
			<![CDATA[ 
				t.replay_memo is not null
			]]>
			</isEqual>
		</dynamic>
			<![CDATA[
			order by t.cc_id desc
		]]>
		<include refid="global.paginationEnd" />
	</select>
	
	
	
	<select id="getCancelEventCount" parameterClass="processEventTotal" resultClass="java.lang.Integer">
	<![CDATA[
		select count(*) from workflow.workflow_tb_event_total t
		where t.initator = #initator#
		and t.status = #status#
	]]>
	<dynamic>
		<isNotEmpty property="eventId" prepend="and">
			<![CDATA[ 
				t.event_id = #eventId#
			]]>
		</isNotEmpty>
		<isNotEmpty property="event_id" prepend="and">
			<![CDATA[ 
				t.event_title = #eventTitle#
			]]>
		</isNotEmpty>
	</dynamic>
	</select>
	
	<select id="getCancelEventList" parameterClass="processEventTotal" resultClass="processEventTotal">
	<include refid="global.paginationStart" />
	<![CDATA[
		select t.event_id eventId,
			t.event_title eventTitle,
			t.status,
			t.initator,
			t.creatdate creatdate,
			o.emp_name curUserName,
			t.model_id modelId,
			(select x.name_ from osap.act_re_procdef x where x.key_ = t.model_id and rownum = 1) modelName
		from workflow.workflow_tb_event_total t
			left join workflow.workflow_tb_event_detail v on t.tododetailid = v.event_dtl_id
			left join basis.basis_tb_salesemp_info o on v.cur_user_id = o.emp_id
		where t.initator = #initator#
		and t.status = #status#
	]]>
	<dynamic>
		<isNotEmpty property="eventId" prepend="and">
			<![CDATA[ 
				t.event_id = #eventId#
			]]>
		</isNotEmpty>
		<isNotEmpty property="event_id" prepend="and">
			<![CDATA[ 
				t.event_title = #eventTitle#
			]]>
		</isNotEmpty>
	</dynamic>
	<![CDATA[
			order by t.creatdate desc
		]]>
	<include refid="global.paginationEnd" />
	</select>
	
	
	<select id="getCcListByEventId" parameterClass="cc" resultClass="cc">
		<![CDATA[
		select t.*,o.emp_name creator_name
  		from workflow.workflow_tb_cc t,basis.basis_tb_salesemp_info o
		where t.event_id = #event_id# and t.event_detail_id = #event_detail_id#
		      and to_char(o.emp_id) = t.cc_user_id
		]]>
	</select>
	
	<!-- 根据用户ID查找角色ID -->
	<select id="getStationIdByUserId" parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[
		select 
			u.station_id
		from
  			basis.basis_tb_station_user u
  		where 
  			u.user_id = #userId#
  		and
  			u.is_main_station = 'Y'
		]]>
	</select>
</sqlMap>