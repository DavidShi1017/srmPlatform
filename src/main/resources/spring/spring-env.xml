<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!--context:annotation-config / -->

	<bean id="env"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="/WEB-INF/env.properties" />
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/env.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
	    <!-- 基本属性 url、user、password -->  
<!-- 	    <property name="url" value="${jdbc_url}" />   -->
<!-- 	    <property name="username" value="${jdbc_user}" />   -->
<!-- 	    <property name="password" value="${jdbc.password}" />   -->
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	    <!-- 配置初始化大小、最小、最大 -->  
	    <property name="initialSize" value="1" />  
	    <property name="minIdle" value="1" />   
	    <property name="maxActive" value="20" />  
	   
	    <!-- 配置获取连接等待超时的时间 -->  
	    <property name="maxWait" value="60000" />  
	   
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
	   
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
	    <property name="minEvictableIdleTimeMillis" value="300000" />  
	    
	    <property name="validationQuery" value="SELECT 1 from dual" />  
	    <property name="testWhileIdle" value="true" />  
	    <property name="testOnBorrow" value="false" />  
	    <property name="testOnReturn" value="false" />  
	   
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
<!-- 	    <property name="poolPreparedStatements" value="true" />   -->
<!-- 	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />   -->
	   
	    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
<!-- 	    <property name="filters" value="stat" />    -->
	</bean>  

<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">   -->
<!-- 		<property name="driverClassName" value="${jdbc.driverClassName}" /> -->
<!-- 		<property name="url" value="${jdbc.url}" /> -->
<!-- 		<property name="username" value="${jdbc.username}" /> -->
<!-- 		<property name="password" value="${jdbc.password}" /> -->
<!-- 		<property name="testOnBorrow" value="true"/>  -->
<!--    		<property name="testWhileIdle" value="true"/>  -->
   		
<!-- 	</bean> -->

   

	<!--配置ibatis的资源文件载入 -->
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />

	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>classpath:ibatis/ibatis-config.xml</value>
		</property>
		<property name="dataSource" ref="dataSource" />
		  <property name="lobHandler">   
         <ref local="oracleLobHandler"/>   
     </property>
	</bean>
	
	  
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
	</bean>


	<bean id="contextSource" class="org.springframework.ldap.core.support.LdapContextSource">
		<property name="url">
			<value>${ldap.ldapHost}</value>
		</property>
		<property name="base">
			<value>${ldap.base}</value>
		</property>
		<property name="userDn">
			<value>${ldap.userDn}</value>
		</property>
		<property name="password">
			<value>${ldap.password}</value>
		</property>
		<property name="referral" value="follow" />
	</bean>


	<bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
		<constructor-arg ref="contextSource" />
	</bean>


	<bean id="LDAPService"
		class="com.jingtong.platform.login.service.impl.LDAPServiceImpl">
		<property name="ldapTemplate" ref="ldapTemplate" />
		<property name="orgService" ref="orgService" />
		<property name="domain">
			<value>${ldap.domain}</value>
		</property>
		<property name="url">
			<value>${ldap.ldapHost2}</value>
		</property>
		<property name="userDn">
			<value>${ldap.userDn}</value>
		</property>
		<property name="pwd">
			<value>${ldap.password}</value>
		</property>
		<property name="base">
			<value>${ldap.base}</value>
		</property>
	</bean>



	<bean id="baseAction" class="com.jingtong.platform.base.action.BaseAction">
		<property name="env" ref="env" />
	</bean>

	<bean id="baseDao" class="com.jingtong.platform.base.dao.impl.BaseDaoImpl">
		<property name="sqlMapClient" ref="sqlMapClient" />
 		
	</bean>
  <bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" lazy-init="true" />   
     <bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">  
      <property name="nativeJdbcExtractor">   
         <ref local="nativeJdbcExtractor" />   
     </property>   
 </bean> 


 
</beans>
